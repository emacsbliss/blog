<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
<channel>
<title><![CDATA[EmacsBliss]]></title>
<description><![CDATA[EmacsBliss]]></description>
<link>https://emacsbliss.com/</link>
<lastBuildDate>Sun, 21 Mar 2021 22:14:56 -0400</lastBuildDate>
<item>
  <title><![CDATA[search replace with Emacs]]></title>
  <description><![CDATA[
<p>
Search (and replace) is something I do so much in emacs, I want to
share my typical workflow for it.
</p>

<div id="outline-container-search-buffers" class="outline-2">
<h2 id="search-buffers">search in buffer(s)</h2>
<div class="outline-text-2" id="text-search-buffers">
<p>
For this purpose, I like to use <code>swiper</code> <sup><a id="fnr.1" class="footref" href="#fn.1">1</a></sup> which I bind to <code>C-s</code>.
</p>

<p>
<code>swiper</code> searches inside current buffer and list all matches in minibuffer.
To search in all open buffers, use <code>swiper-all</code> instead.
</p>

<p>
Sometimes I just prefer simple search like the classic vim way, then I use <code>/</code>
which maps to <code>evil-ex-search-forward</code> from <code>evil mode</code> <sup><a id="fnr.2" class="footref" href="#fn.2">2</a></sup>.
</p>

<p>
It behaves exactly like what you do with <code>/</code> in vim normal mode.
</p>
</div>
</div>

<div id="outline-container-search-directories" class="outline-2">
<h2 id="search-directories">search in directories</h2>
<div class="outline-text-2" id="text-search-directories">
</div>
<div id="outline-container-rg" class="outline-3">
<h3 id="rg">rg</h3>
<div class="outline-text-3" id="text-rg">
<p>
So far <code>ripgrep(rg)</code> <sup><a id="fnr.3" class="footref" href="#fn.3">3</a></sup> seems to be the fatest search tool around and many
Emacs packages use it as backend.
</p>

<p>
By default <code>rg</code> respects <code>.gitignore</code> file but if you want it to search
everything, you can use <code>--no-ignore-vcs</code> switch.
</p>

<p>
Sometimes it finds things from the file I don&rsquo;t want, to prevent that,
add a file with name <code>.ignore</code> at the root of git repo as described here <sup><a id="fnr.4" class="footref" href="#fn.4">4</a></sup>:
</p>

<pre class="example" id="orge2c10a9">
/TAGS
*.min.js*
/Build/Output/
/ThirdParty/
</pre>
</div>
</div>

<div id="outline-container-counsel-rg" class="outline-3">
<h3 id="counsel-rg">counsel-rg</h3>
<div class="outline-text-3" id="text-counsel-rg">
<p>
My favorite Emacs package for searching is <code>counsel-rg</code> <sup><a id="fnr.5" class="footref" href="#fn.5">5</a></sup> and I bind it to <code>C-/</code>.
It uses <code>rg</code> as backend.
</p>

<p>
<code>counsel-rg</code> by default looks for a directory with <code>.git</code> and starts a search from
there.
</p>

<p>
To limit the scope to current directory and its sub directories, not where
<code>.git</code> is, use <code>prefix argument</code> before running <code>counsel-rg</code> then select
which directory you want to run <code>rg</code> on.
</p>
</div>
</div>

<div id="outline-container-deadgrep" class="outline-3">
<h3 id="deadgrep">deadgrep</h3>
<div class="outline-text-3" id="text-deadgrep">
<p>
<code>deadgrep</code> <sup><a id="fnr.6" class="footref" href="#fn.6">6</a></sup> is another package which uses <code>rg</code> as backend for searching.
</p>

<p>
It has many features and allow filtering to be done more easier than
<code>counsel-rg</code>.
</p>

<p>
One notable feature is search on remote host:
</p>
<blockquote>
<p>
If you&rsquo;re editing a remote file with Tramp, deadgrep will search the remote machine. This requires rg to be installed on that machine.
</p>
</blockquote>
</div>
</div>
</div>
<div id="outline-container-replace-multiple-files" class="outline-2">
<h2 id="replace-multiple-files">replace in multiple files</h2>
<div class="outline-text-2" id="text-replace-multiple-files">
<p>
For this purpose, this great blog post <sup><a id="fnr.7" class="footref" href="#fn.7">7</a></sup> describes it in detail.
It use <code>counsel-ag</code> but same thing works for <code>counsel-rg</code>
which is the one I use.
</p>

<p>
In short, workflow is something like this:
</p>

<ul class="org-ul">
<li><kbd>C-/</kbd> (<code>counsel-rg</code>)</li>
<li>type search pattern</li>
<li><code>C-c C-o</code> (<kbd>ivy-occur</kbd>) which saves result into a buffer</li>
<li><code>C-x C-q</code> (<kbd>ivy-wgrep-change-to-wgrep-mode</kbd>) in <code>ivy-occur</code> buffer</li>
<li><code>:%s/from/to/g</code> to do the replace</li>
<li><code>C-c C-c</code> (<kbd>wgrep-finish-edit</kbd>) save the changes</li>
</ul>
</div>
</div>
<div id="footnotes">
<h2 class="footnotes">Footnotes: </h2>
<div id="text-footnotes">

<div class="footdef"><sup><a id="fn.1" class="footnum" href="#fnr.1">1</a></sup> <div class="footpara"><p class="footpara">
<a href="https://github.com/abo-abo/swiper">https://github.com/abo-abo/swiper</a>
</p></div></div>

<div class="footdef"><sup><a id="fn.2" class="footnum" href="#fnr.2">2</a></sup> <div class="footpara"><p class="footpara">
<a href="https://github.com/emacs-evil/evil">https://github.com/emacs-evil/evil</a>
</p></div></div>

<div class="footdef"><sup><a id="fn.3" class="footnum" href="#fnr.3">3</a></sup> <div class="footpara"><p class="footpara">
<a href="https://github.com/BurntSushi/ripgrep">https://github.com/BurntSushi/ripgrep</a>
</p></div></div>

<div class="footdef"><sup><a id="fn.4" class="footnum" href="#fnr.4">4</a></sup> <div class="footpara"><p class="footpara">
<a href="https://oremacs.com/2018/03/05/grep-exclude/">https://oremacs.com/2018/03/05/grep-exclude/</a>
</p></div></div>

<div class="footdef"><sup><a id="fn.5" class="footnum" href="#fnr.5">5</a></sup> <div class="footpara"><p class="footpara">
<a href="https://oremacs.com/2017/08/04/ripgrep/">https://oremacs.com/2017/08/04/ripgrep/</a>
</p></div></div>

<div class="footdef"><sup><a id="fn.6" class="footnum" href="#fnr.6">6</a></sup> <div class="footpara"><p class="footpara">
<a href="https://github.com/Wilfred/deadgrep">https://github.com/Wilfred/deadgrep</a>
</p></div></div>

<div class="footdef"><sup><a id="fn.7" class="footnum" href="#fnr.7">7</a></sup> <div class="footpara"><p class="footpara">
<a href="https://sam217pa.github.io/2016/09/11/nuclear-power-editing-via-ivy-and-ag/">https://sam217pa.github.io/2016/09/11/nuclear-power-editing-via-ivy-and-ag/</a>
</p></div></div>


</div>
</div><div class="taglist"><a href="https://emacsbliss.com/tags.html">Tags</a>: <a href="https://emacsbliss.com/tag-emacs.html">Emacs</a> </div>]]></description>
  <category><![CDATA[Emacs]]></category>
  <link>https://emacsbliss.com/2019-02-17-search-replace-with-emacs.html</link>
  <pubDate>Sun, 17 Feb 2019 22:09:00 -0500</pubDate>
</item>
</channel>
</rss>
